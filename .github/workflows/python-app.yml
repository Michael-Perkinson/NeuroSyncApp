name: Build and Release NeuroSyncApp Executable

on:
  push:
    tags:
      - 'v*'  # Trigger only on tags that start with "v" (e.g., v2.0.15)

permissions:
  contents: write   # Allow GitHub Actions to write to the repository

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      # Set up conda environment with Python 3.10
      - name: Set up Python with Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: "3.10"
          auto-activate-base: true
          environment-file: environment.yml  # You can specify dependencies here
          auto-update-conda: true

      # Cache conda environment for faster builds
      - name: Cache conda environment
        uses: actions/cache@v3
        with:
          path: ~/.conda/envs
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}

      - name: Install dependencies with conda
        run: |
          conda install -y tkinter  # Ensure tkinter is included
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Create dist directory
        run: |
          mkdir -p dist/NeuroSyncApp_${{ github.ref_name }}

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile src/main_app.py --name "NeuroSyncApp_${{ github.ref_name }}" --icon icon/icon.ico --distpath "dist/NeuroSyncApp_${{ github.ref_name }}"

      - name: Verify .exe file path
        shell: powershell
        run: |
          if (Test-Path "dist/NeuroSyncApp_${{ github.ref_name }}/NeuroSyncApp_${{ github.ref_name }}.exe") {
            Write-Output "File exists."
          } else {
            Write-Output "File does not exist."
            exit 1
          }

      - name: Upload .exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-executable
          path: dist/NeuroSyncApp_${{ github.ref_name }}/NeuroSyncApp_${{ github.ref_name }}.exe

      - name: Install GitHub CLI
        run: |
          choco install gh  # Install GitHub CLI on Windows

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} dist/NeuroSyncApp_${{ github.ref_name }}/NeuroSyncApp_${{ github.ref_name }}.exe --title "NeuroSyncApp ${{ github.ref_name }}" --notes "Automated release of NeuroSyncApp version ${{ github.ref_name }}"